{"version":3,"sources":["turbopack:///[project]/src/app/results/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Suspense, useEffect, useState, useCallback } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\n\ntype FortuneData = {\n  type: 'fortune';\n  name: string;\n  breed: string;\n  sex: string;\n  birthDate: string;\n  fortune: string;\n  saju?: string;\n};\n\ntype CompatibilityData = {\n  type: 'compatibility';\n  dogName: string;\n  breed: string;\n  sex: string;\n  birthDate: string;\n  ownerName: string;\n  ownerBirthDate: string;\n  ownerBirthTime: string;\n  ownerEB: string;\n  compatibility: string;\n};\n\ntype ResultData = FortuneData | CompatibilityData;\n\nfunction ResultsInner() {\n  const params = useSearchParams();\n  const router = useRouter();\n  const [fortuneOpen, setFortuneOpen] = useState(true);\n  const [compatibilityOpen, setCompatibilityOpen] = useState(true);\n  const [storedFortune, setStoredFortune] = useState<FortuneData | null>(null);\n  const [storedCompatibility, setStoredCompatibility] = useState<CompatibilityData | null>(null);\n\n  // Generate unique ID for this result\n  const generateResultId = () => {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  };\n\n  // Save to cookies\n  const saveToStorage = useCallback((data: ResultData) => {\n    const resultId = generateResultId();\n    \n    // Save to localStorage for persistence\n    localStorage.setItem(`pawstars_result_${resultId}`, JSON.stringify(data));\n    \n    // Also update current stored data based on type\n    if (data.type === 'fortune') {\n      localStorage.setItem('pawstars_latest_fortune', JSON.stringify(data));\n      setStoredFortune(data);\n    } else {\n      localStorage.setItem('pawstars_latest_compatibility', JSON.stringify(data));\n      setStoredCompatibility(data);\n    }\n    \n    // Update URL to include result ID\n    const newUrl = `/results/${resultId}`;\n    window.history.replaceState({}, '', newUrl);\n    \n    return resultId;\n  }, []);\n\n  // Load from storage\n  const loadFromStorage = () => {\n    try {\n      const fortune = localStorage.getItem('pawstars_latest_fortune');\n      const compatibility = localStorage.getItem('pawstars_latest_compatibility');\n      \n      if (fortune) {\n        setStoredFortune(JSON.parse(fortune));\n      }\n      if (compatibility) {\n        setStoredCompatibility(JSON.parse(compatibility));\n      }\n    } catch (error) {\n      console.error('Error loading from storage:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Load existing data from storage\n    loadFromStorage();\n\n    // Check if we have URL parameters (new result)\n    const type = params.get('type');\n    if (type) {\n      const data: Partial<ResultData> = { type: type as 'fortune' | 'compatibility' };\n      \n      // Get all URL parameters and build result data\n      for (const [key, value] of params.entries()) {\n        if (key !== 'type') {\n          (data as Record<string, string>)[key] = value;\n        }\n      }\n      \n      if (data.type === 'fortune' && data.name && data.breed && data.fortune) {\n        const fortuneData = data as FortuneData;\n        saveToStorage(fortuneData);\n      } else if (data.type === 'compatibility' && data.dogName && data.breed && data.compatibility) {\n        const compatibilityData = data as CompatibilityData;\n        saveToStorage(compatibilityData);\n      }\n    }\n  }, [params, saveToStorage]);\n\n  const share = async (data: ResultData) => {\n    let text = `🐶 PawStars 결과\\n`;\n    \n    if (data.type === 'fortune') {\n      text += `이름: ${data.name}\\n견종: ${data.breed}\\n`;\n      if (data.birthDate !== 'unknown') text += `생일: ${data.birthDate}\\n`;\n      text += `성별: ${data.sex === 'male' ? '수컷' : '암컷'}\\n\\n`;\n      text += `🔮 오늘의 운세:\\n${data.fortune}`;\n    } else {\n      text += `강아지: ${data.dogName} (${data.breed})\\n`;\n      text += `견주: ${data.ownerName}\\n`;\n      text += `12지지: ${data.ownerEB}\\n\\n`;\n      text += `💕 궁합 분석:\\n${data.compatibility}`;\n    }\n\n    try {\n      // Try KakaoTalk first\n      const w = globalThis as {\n        Kakao?: { \n          isInitialized?: () => boolean; \n          Share: { \n            sendDefault: (opts: { objectType: string; text: string; link: { mobileWebUrl: string; webUrl: string } }) => void \n          } \n        };\n      };\n      if (w?.Kakao && w.Kakao.isInitialized?.()) {\n        w.Kakao.Share.sendDefault({\n          objectType: \"text\",\n          text,\n          link: { mobileWebUrl: location.href, webUrl: location.href }\n        });\n        return;\n      }\n      \n      // Try Web Share API\n      if (navigator.share) {\n        await navigator.share({ title: \"PawStars 결과\", text });\n        return;\n      }\n      \n      // Fallback to clipboard\n      await navigator.clipboard.writeText(text);\n      alert(\"결과를 클립보드에 복사했어요.\");\n    } catch {\n      try {\n        await navigator.clipboard.writeText(text);\n        alert(\"결과를 클립보드에 복사했어요.\");\n      } catch {\n        alert(\"공유에 실패했어요. 다시 시도해 주세요.\");\n      }\n    }\n  };\n\n  const hasResults = storedFortune || storedCompatibility;\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      {/* Sticky Toggle Navigation */}\n      {hasResults && (\n        <div className=\"sticky top-16 z-40 bg-black/90 backdrop-blur-sm border-b border-white/10 py-2\">\n          <div className=\"max-w-md mx-auto px-4\">\n            <div className=\"flex gap-2\">\n              {storedFortune && (\n                <button\n                  onClick={() => setFortuneOpen(!fortuneOpen)}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    fortuneOpen\n                      ? 'bg-white text-black'\n                      : 'bg-white/10 text-white/80 hover:bg-white/20'\n                  }`}\n                >\n                  🔮 삼주 {fortuneOpen ? '닫기' : '열기'}\n                </button>\n              )}\n              {storedCompatibility && (\n                <button\n                  onClick={() => setCompatibilityOpen(!compatibilityOpen)}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    compatibilityOpen\n                      ? 'bg-white text-black'\n                      : 'bg-white/10 text-white/80 hover:bg-white/20'\n                  }`}\n                >\n                  💕 궁합 {compatibilityOpen ? '닫기' : '열기'}\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"max-w-md mx-auto px-4 py-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-2xl font-bold mb-2\">📊 결과 보기</h1>\n          <p className=\"text-white/60\">분석 결과를 확인하세요</p>\n        </div>\n\n        {!hasResults ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-white/60 mb-6\">\n              <div className=\"text-4xl mb-4\">🔮</div>\n              <p>아직 분석 결과가 없어요</p>\n              <p className=\"text-sm mt-2\">강아지 삼주나 궁합을 먼저 분석해보세요</p>\n            </div>\n            <div className=\"flex flex-col gap-3\">\n              <button\n                onClick={() => router.push('/fortune')}\n                className=\"w-full bg-white text-black py-3 px-6 rounded-lg font-medium hover:bg-white/90 transition-colors\"\n              >\n                🐕 강아지 삼주 보기\n              </button>\n              <button\n                onClick={() => router.push('/compatibility')}\n                className=\"w-full bg-white/10 text-white py-3 px-6 rounded-lg font-medium hover:bg-white/20 transition-colors border border-white/20\"\n              >\n                💕 견주 궁합 보기\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* Fortune Results */}\n            {storedFortune && (\n              <div className={`transition-all duration-300 ${fortuneOpen ? 'opacity-100' : 'opacity-50'}`}>\n                <div className=\"bg-white/5 rounded-lg border border-white/10 overflow-hidden\">\n                  <div className=\"p-4 border-b border-white/10\">\n                    <div className=\"flex items-center justify-between\">\n                      <h2 className=\"text-lg font-semibold flex items-center gap-2\">\n                        🔮 강아지 삼주\n                      </h2>\n                      <button\n                        onClick={() => share(storedFortune)}\n                        className=\"text-sm text-white/60 hover:text-white transition-colors\"\n                      >\n                        공유하기\n                      </button>\n                    </div>\n                    <div className=\"text-sm text-white/60 mt-1\">\n                      {storedFortune.name} ({storedFortune.breed}) • {storedFortune.sex === 'male' ? '수컷' : '암컷'}\n                    </div>\n                  </div>\n                  {fortuneOpen && (\n                    <div className=\"p-4\">\n                      <div className=\"whitespace-pre-wrap text-white/90 leading-relaxed\">\n                        {storedFortune.fortune}\n                      </div>\n                      {storedFortune.saju && (\n                        <div className=\"mt-4 pt-4 border-t border-white/10\">\n                          <div className=\"text-sm font-medium text-white/80 mb-2\">사주 분석</div>\n                          <div className=\"whitespace-pre-wrap text-white/90 leading-relaxed\">\n                            {storedFortune.saju}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Compatibility Results */}\n            {storedCompatibility && (\n              <div className={`transition-all duration-300 ${compatibilityOpen ? 'opacity-100' : 'opacity-50'}`}>\n                <div className=\"bg-white/5 rounded-lg border border-white/10 overflow-hidden\">\n                  <div className=\"p-4 border-b border-white/10\">\n                    <div className=\"flex items-center justify-between\">\n                      <h2 className=\"text-lg font-semibold flex items-center gap-2\">\n                        💕 견주 궁합\n                      </h2>\n                      <button\n                        onClick={() => share(storedCompatibility)}\n                        className=\"text-sm text-white/60 hover:text-white transition-colors\"\n                      >\n                        공유하기\n                      </button>\n                    </div>\n                    <div className=\"text-sm text-white/60 mt-1\">\n                      {storedCompatibility.dogName} × {storedCompatibility.ownerName} • {storedCompatibility.ownerEB}\n                    </div>\n                  </div>\n                  {compatibilityOpen && (\n                    <div className=\"p-4\">\n                      <div className=\"whitespace-pre-wrap text-white/90 leading-relaxed\">\n                        {storedCompatibility.compatibility}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col gap-3 pt-4\">\n              <button\n                onClick={() => router.push('/fortune')}\n                className=\"w-full bg-white text-black py-3 px-6 rounded-lg font-medium hover:bg-white/90 transition-colors\"\n              >\n                🔮 새로운 삼주 분석\n              </button>\n              <button\n                onClick={() => router.push('/compatibility')}\n                className=\"w-full bg-white/10 text-white py-3 px-6 rounded-lg font-medium hover:bg-white/20 transition-colors border border-white/20\"\n              >\n                💕 새로운 궁합 분석\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function ResultsPage() {\n  return (\n    <Suspense fallback={\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl mb-2\">🔮</div>\n          <div>결과를 불러오는 중...</div>\n        </div>\n      </div>\n    }>\n      <ResultsInner />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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"}