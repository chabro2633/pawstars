{"version":3,"sources":["turbopack:///[project]/src/utils/dogInfoStorage.ts","turbopack:///[project]/src/app/new-fortune/page.tsx"],"sourcesContent":["/**\n * 강아지 정보 쿠키 저장 및 불러오기 유틸리티\n */\n\nexport interface DogInfo {\n  name: string;\n  breed: string;\n  sex: \"male\" | \"female\";\n  birthYear: string;\n  birthMonth: string;\n  birthDay: string;\n}\n\nconst DOG_INFO_COOKIE_KEY = 'pawstars_dog_info';\n\n/**\n * 쿠키에 강아지 정보 저장\n */\nexport function saveDogInfo(dogInfo: DogInfo): void {\n  try {\n    const cookieValue = encodeURIComponent(JSON.stringify(dogInfo));\n    // 30일 동안 저장\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + 30);\n    \n    document.cookie = `${DOG_INFO_COOKIE_KEY}=${cookieValue}; expires=${expirationDate.toUTCString()}; path=/; SameSite=Lax`;\n  } catch (error) {\n    console.error('강아지 정보 저장 실패:', error);\n  }\n}\n\n/**\n * 쿠키에서 강아지 정보 불러오기\n */\nexport function loadDogInfo(): DogInfo | null {\n  try {\n    const cookies = document.cookie.split(';');\n    const dogInfoCookie = cookies.find(cookie => \n      cookie.trim().startsWith(`${DOG_INFO_COOKIE_KEY}=`)\n    );\n    \n    if (!dogInfoCookie) {\n      return null;\n    }\n    \n    const cookieValue = dogInfoCookie.split('=')[1];\n    const decodedValue = decodeURIComponent(cookieValue);\n    const dogInfo = JSON.parse(decodedValue) as DogInfo;\n    \n    // 데이터 유효성 검사\n    if (dogInfo.name && dogInfo.breed && dogInfo.sex && \n        dogInfo.birthYear && dogInfo.birthMonth && dogInfo.birthDay) {\n      return dogInfo;\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('강아지 정보 불러오기 실패:', error);\n    return null;\n  }\n}\n\n/**\n * 쿠키에서 강아지 정보 삭제\n */\nexport function clearDogInfo(): void {\n  try {\n    document.cookie = `${DOG_INFO_COOKIE_KEY}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n  } catch (error) {\n    console.error('강아지 정보 삭제 실패:', error);\n  }\n}\n\n","\"use client\";\n\n/**\n * Pet Fortune App - New Fortune Page (Multi-Step)\n * Figma Make 파일에서 추출된 실제 디자인 기반\n * 3단계 폼: 1) 기본정보 2) 상세정보 3) 확인 및 분석\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { saveDogInfo, loadDogInfo, type DogInfo } from \"@/utils/dogInfoStorage\";\n\ntype Sex = \"male\" | \"female\";\n\nconst BREEDS: string[] = [\n  \"말티즈\", \"푸들\", \"포메라니안\", \"시추\", \"비숑 프리제\", \"요크셔테리어\", \"치와와\", \"닥스훈트\",\n  \"미니핀\", \"스피츠\", \"코커스패니얼\", \"프렌치불독\", \"퍼그\", \"보스턴테리어\", \"미니어처슈나우저\",\n  \"웰시코기 펨브로크\", \"웰시코기 카디건\", \"골든리트리버\", \"래브라도리트리버\", \"보더콜리\",\n  \"사모예드\", \"시베리안허스키\", \"알래스칸말라뮤트\", \"저먼셰퍼드\", \"도베르만\", \"로트와일러\",\n  \"불마스티프\", \"그레이트데인\", \"세인트버나드\", \"뉴펀들랜드\", \"달마시안\", \"아프간하운드\",\n  \"그레이하운드\", \"이탈리안그레이하운드\", \"휘핏\", \"아키타\", \"시바견\", \"진돗개\", \"풍산개\",\n  \"차우차우\", \"불테리어\", \"스태퍼드셔불테리어\", \"아메리칸불독\", \"잉글리시불독\", \"복서\",\n  \"마스티프\", \"케인코르소\", \"프레사카나리오\", \"도고아르헨티노\", \"불독\", \"아메리칸핏불테리어\"\n];\n\nexport default function NewFortunePage() {\n  const router = useRouter();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  \n  // 폼 데이터\n  const [name, setName] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [sex, setSex] = useState<Sex>(\"male\");\n  const [birthYear, setBirthYear] = useState(\"\");\n  const [birthMonth, setBirthMonth] = useState(\"\");\n  const [birthDay, setBirthDay] = useState(\"\");\n  const [personality, setPersonality] = useState(\"\");\n  const [favoriteActivity, setFavoriteActivity] = useState(\"\");\n  const [healthCondition, setHealthCondition] = useState(\"\");\n  \n  // UI 상태\n  const [breedSearch, setBreedSearch] = useState(\"\");\n  const [showBreedList, setShowBreedList] = useState(false);\n\n  // 저장된 강아지 정보 불러오기\n  useEffect(() => {\n    const savedDogInfo = loadDogInfo();\n    if (savedDogInfo) {\n      setName(savedDogInfo.name);\n      setBreed(savedDogInfo.breed);\n      setSex(savedDogInfo.sex);\n      setBirthYear(savedDogInfo.birthYear);\n      setBirthMonth(savedDogInfo.birthMonth);\n      setBirthDay(savedDogInfo.birthDay);\n    }\n  }, []);\n\n  // 견종 필터링\n  const filteredBreeds = BREEDS.filter(b => \n    b.toLowerCase().includes(breedSearch.toLowerCase())\n  );\n\n  const handleBreedSelect = (selectedBreed: string) => {\n    setBreed(selectedBreed);\n    setBreedSearch(\"\");\n    setShowBreedList(false);\n  };\n\n  // 단계별 유효성 검사\n  const validateStep = (step: number): boolean => {\n    switch (step) {\n      case 1:\n        return name.trim() !== \"\" && breed.trim() !== \"\";\n      case 2:\n        return true; // 2단계는 선택사항\n      case 3:\n        return true; // 3단계는 확인 단계\n      default:\n        return false;\n    }\n  };\n\n  const nextStep = () => {\n    if (validateStep(currentStep)) {\n      setCurrentStep(prev => Math.min(prev + 1, 3));\n    } else {\n      alert(\"필수 정보를 입력해주세요.\");\n    }\n  };\n\n  const prevStep = () => {\n    setCurrentStep(prev => Math.max(prev - 1, 1));\n  };\n\n  const submit = async () => {\n    if (!validateStep(1)) {\n      alert(\"필수 정보를 입력해주세요.\");\n      return;\n    }\n\n    // 강아지 정보를 쿠키에 저장\n    const dogInfo: DogInfo = {\n      name: name.trim(),\n      breed: breed.trim(),\n      sex,\n      birthYear,\n      birthMonth,\n      birthDay\n    };\n    saveDogInfo(dogInfo);\n\n    setLoading(true);\n\n    try {\n      const birthDate = (!birthYear || !birthMonth || !birthDay) ? null : \n        `${birthYear}-${birthMonth.padStart(2, '0')}-${birthDay.padStart(2, '0')}`;\n      \n      const response = await fetch(\"/api/fortune\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: name.trim(),\n          breed: breed.trim(),\n          sex,\n          birthDate,\n          personality,\n          favoriteActivity,\n          healthCondition\n        }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        const resultId = Date.now().toString();\n        \n        // localStorage에 결과 저장\n        localStorage.setItem(`fortune_${resultId}`, JSON.stringify({\n          type: 'fortune',\n          data: {\n            name: name.trim(),\n            breed: breed.trim(),\n            sex,\n            birthDate,\n            personality,\n            favoriteActivity,\n            healthCondition,\n            fortune: result.fortune || \"AI가 생성한 운세 정보\",\n            saju: result.saju || \"AI가 생성한 사주 정보\"\n          },\n          timestamp: new Date().toISOString()\n        }));\n        \n        // 새로운 결과 페이지로 이동\n        router.push(`/new-results?highlight=fortune_${resultId}`);\n      } else {\n        const error = await response.json();\n        alert(`오류가 발생했습니다: ${error.error || '알 수 없는 오류'}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"네트워크 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"figma-fortune-container\">\n      <div className=\"figma-fortune-frame\">\n        \n        {/* 헤더 섹션 */}\n        <div className=\"figma-fortune-header\">\n          <h1 className=\"figma-fortune-title\">🐕 강아지 삼주</h1>\n          <p className=\"figma-fortune-subtitle\">강아지의 사주와 운세를 알아보세요</p>\n          \n          {/* 진행 표시기 */}\n          <div className=\"figma-progress-container\">\n            <div className=\"figma-progress-bar\">\n              <div \n                className=\"figma-progress-fill\" \n                style={{ width: `${(currentStep / 3) * 100}%` }}\n              ></div>\n            </div>\n            <div className=\"figma-progress-text\">\n              {currentStep}단계 / 3단계\n            </div>\n          </div>\n        </div>\n\n        {/* 단계별 폼 */}\n        <div className=\"figma-fortune-form\">\n          \n          {/* 1단계: 기본 정보 */}\n          {currentStep === 1 && (\n            <div className=\"figma-step-container\">\n              <div className=\"figma-step-header\">\n                <h2 className=\"figma-step-title\">1단계: 기본 정보</h2>\n                <p className=\"figma-step-subtitle\">강아지의 기본 정보를 입력해주세요</p>\n              </div>\n\n              {/* 이름과 견종 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">이름과 견종</h3>\n                \n                {/* 강아지 이름 */}\n                <div className=\"figma-form-group\">\n                  <label className=\"figma-form-label\">강아지 이름 *</label>\n                  <input\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"예: 뭉치, 초코, 별이\"\n                    className=\"figma-form-input\"\n                  />\n                </div>\n\n                {/* 견종 선택 */}\n                <div className=\"figma-form-group\">\n                  <label className=\"figma-form-label\">견종 *</label>\n                  <div className=\"figma-breed-selector\">\n                    <input\n                      type=\"text\"\n                      value={breed || breedSearch}\n                      onChange={(e) => {\n                        setBreedSearch(e.target.value);\n                        setBreed(\"\");\n                        setShowBreedList(true);\n                      }}\n                      onFocus={() => setShowBreedList(true)}\n                      placeholder=\"견종을 검색하거나 선택하세요\"\n                      className=\"figma-form-input\"\n                    />\n                    \n                    {showBreedList && breedSearch && (\n                      <div className=\"figma-breed-dropdown\">\n                        {filteredBreeds.slice(0, 10).map((breedOption) => (\n                          <div\n                            key={breedOption}\n                            className=\"figma-breed-option\"\n                            onClick={() => handleBreedSelect(breedOption)}\n                          >\n                            {breedOption}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                    \n                    {/* 수평 스크롤 견종 리스트 */}\n                    <div className=\"figma-breed-scroll\">\n                      {BREEDS.slice(0, 20).map((breedOption) => (\n                        <button\n                          key={breedOption}\n                          type=\"button\"\n                          onClick={() => handleBreedSelect(breedOption)}\n                          className={`figma-breed-chip ${breed === breedOption ? 'active' : ''}`}\n                        >\n                          {breedOption}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 성별 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">성별</h3>\n                <div className=\"figma-radio-group\">\n                  <label className={`figma-radio-option ${sex === 'male' ? 'active' : ''}`}>\n                    <input\n                      type=\"radio\"\n                      name=\"sex\"\n                      value=\"male\"\n                      checked={sex === \"male\"}\n                      onChange={(e) => setSex(e.target.value as Sex)}\n                    />\n                    <span className=\"figma-radio-icon\">♂️</span>\n                    <span className=\"figma-radio-text\">수컷</span>\n                  </label>\n                  <label className={`figma-radio-option ${sex === 'female' ? 'active' : ''}`}>\n                    <input\n                      type=\"radio\"\n                      name=\"sex\"\n                      value=\"female\"\n                      checked={sex === \"female\"}\n                      onChange={(e) => setSex(e.target.value as Sex)}\n                    />\n                    <span className=\"figma-radio-icon\">♀️</span>\n                    <span className=\"figma-radio-text\">암컷</span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* 2단계: 상세 정보 */}\n          {currentStep === 2 && (\n            <div className=\"figma-step-container\">\n              <div className=\"figma-step-header\">\n                <h2 className=\"figma-step-title\">2단계: 상세 정보</h2>\n                <p className=\"figma-step-subtitle\">더 정확한 분석을 위한 추가 정보 (선택사항)</p>\n              </div>\n\n              {/* 생년월일 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">생년월일</h3>\n                <div className=\"figma-date-group\">\n                  <select\n                    value={birthYear}\n                    onChange={(e) => setBirthYear(e.target.value)}\n                    className=\"figma-form-select\"\n                  >\n                    <option value=\"\">년도</option>\n                    {Array.from({ length: 25 }, (_, i) => 2024 - i).map(year => (\n                      <option key={year} value={year}>{year}년</option>\n                    ))}\n                  </select>\n                  \n                  <select\n                    value={birthMonth}\n                    onChange={(e) => setBirthMonth(e.target.value)}\n                    className=\"figma-form-select\"\n                  >\n                    <option value=\"\">월</option>\n                    {Array.from({ length: 12 }, (_, i) => i + 1).map(month => (\n                      <option key={month} value={month}>{month}월</option>\n                    ))}\n                  </select>\n                  \n                  <select\n                    value={birthDay}\n                    onChange={(e) => setBirthDay(e.target.value)}\n                    className=\"figma-form-select\"\n                  >\n                    <option value=\"\">일</option>\n                    {Array.from({ length: 31 }, (_, i) => i + 1).map(day => (\n                      <option key={day} value={day}>{day}일</option>\n                    ))}\n                  </select>\n                </div>\n                <p className=\"figma-form-note\">생년월일을 모르는 경우 비워두셔도 됩니다</p>\n              </div>\n\n              {/* 성격 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">성격</h3>\n                <div className=\"figma-form-group\">\n                  <label className=\"figma-form-label\">강아지의 성격은 어떤가요?</label>\n                  <textarea\n                    value={personality}\n                    onChange={(e) => setPersonality(e.target.value)}\n                    placeholder=\"예: 활발하고 사람을 좋아해요. 다른 강아지들과도 잘 어울려요.\"\n                    className=\"figma-form-textarea\"\n                    rows={3}\n                  />\n                </div>\n              </div>\n\n              {/* 좋아하는 활동 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">좋아하는 활동</h3>\n                <div className=\"figma-form-group\">\n                  <label className=\"figma-form-label\">어떤 활동을 가장 좋아하나요?</label>\n                  <input\n                    type=\"text\"\n                    value={favoriteActivity}\n                    onChange={(e) => setFavoriteActivity(e.target.value)}\n                    placeholder=\"예: 산책, 공놀이, 수영, 간식 먹기\"\n                    className=\"figma-form-input\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* 3단계: 확인 및 분석 */}\n          {currentStep === 3 && (\n            <div className=\"figma-step-container\">\n              <div className=\"figma-step-header\">\n                <h2 className=\"figma-step-title\">3단계: 정보 확인</h2>\n                <p className=\"figma-step-subtitle\">입력하신 정보를 확인하고 분석을 시작하세요</p>\n              </div>\n\n              {/* 정보 요약 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">입력 정보 요약</h3>\n                \n                <div className=\"figma-summary-grid\">\n                  <div className=\"figma-summary-item\">\n                    <span className=\"figma-summary-label\">이름:</span>\n                    <span className=\"figma-summary-value\">{name}</span>\n                  </div>\n                  <div className=\"figma-summary-item\">\n                    <span className=\"figma-summary-label\">견종:</span>\n                    <span className=\"figma-summary-value\">{breed}</span>\n                  </div>\n                  <div className=\"figma-summary-item\">\n                    <span className=\"figma-summary-label\">성별:</span>\n                    <span className=\"figma-summary-value\">{sex === 'male' ? '수컷' : '암컷'}</span>\n                  </div>\n                  {(birthYear && birthMonth && birthDay) && (\n                    <div className=\"figma-summary-item\">\n                      <span className=\"figma-summary-label\">생년월일:</span>\n                      <span className=\"figma-summary-value\">{birthYear}년 {birthMonth}월 {birthDay}일</span>\n                    </div>\n                  )}\n                  {personality && (\n                    <div className=\"figma-summary-item\">\n                      <span className=\"figma-summary-label\">성격:</span>\n                      <span className=\"figma-summary-value\">{personality}</span>\n                    </div>\n                  )}\n                  {favoriteActivity && (\n                    <div className=\"figma-summary-item\">\n                      <span className=\"figma-summary-label\">좋아하는 활동:</span>\n                      <span className=\"figma-summary-value\">{favoriteActivity}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* 건강 상태 카드 */}\n              <div className=\"figma-form-card\">\n                <h3 className=\"figma-form-card-title\">건강 상태 (선택사항)</h3>\n                <div className=\"figma-form-group\">\n                  <label className=\"figma-form-label\">특별한 건강 상태나 주의사항이 있나요?</label>\n                  <textarea\n                    value={healthCondition}\n                    onChange={(e) => setHealthCondition(e.target.value)}\n                    placeholder=\"예: 알레르기, 관절 문제, 특별한 식단 등\"\n                    className=\"figma-form-textarea\"\n                    rows={2}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* 네비게이션 버튼 */}\n        <div className=\"figma-navigation-section\">\n          <div className=\"figma-nav-buttons\">\n            {currentStep > 1 && (\n              <button\n                onClick={prevStep}\n                className=\"figma-secondary-button\"\n              >\n                ← 이전\n              </button>\n            )}\n            \n            {currentStep < 3 ? (\n              <button\n                onClick={nextStep}\n                className=\"figma-primary-button\"\n                disabled={!validateStep(currentStep)}\n              >\n                다음 →\n              </button>\n            ) : (\n              <button\n                onClick={submit}\n                disabled={loading}\n                className={`figma-submit-button ${loading ? 'loading' : ''}`}\n              >\n                {loading ? (\n                  <>\n                    <div className=\"figma-spinner\"></div>\n                    AI가 분석 중입니다...\n                  </>\n                ) : (\n                  \"🔮 삼주 분석 시작\"\n                )}\n              </button>\n            )}\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}